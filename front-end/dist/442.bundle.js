"use strict";(self.webpackChunkfront_end=self.webpackChunkfront_end||[]).push([[442],{8442:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ pages_Profile)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(5466);\n// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js + 15 modules\nvar emotion_react_browser_esm = __webpack_require__(532);\n// EXTERNAL MODULE: ./src/constants/MediaQuery.js\nvar MediaQuery = __webpack_require__(8946);\n;// CONCATENATED MODULE: ./src/components/common/main/ProfileTitle.js\n/* eslint-disable no-nested-ternary */\n\n\n\n\n\nvar profileTitle = function profileTitle(prop) {\n  return (\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)("font-size:1.5rem;padding:1rem 0.7rem 1rem 0.7rem;margin-bottom:2rem;border-radius:1rem;background:", prop === \'About\' ? \'rgba(255, 227, 115)\' : prop === \'Archive\' ? \'rgba(0, 0, 0, 0.3)\' : prop === \'Skill\' ? \'rgba(255, 227, 115)\' : prop === \'Activity\' ? \'rgba(0, 0, 0, 0.3)\' : prop === \'Project\' ? \'rgba(255, 227, 115) \' : \'\', ";color:white;box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.2),inset 3px 3px 5px rgba(0, 0, 0, 0.2);position:relative;" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  );\n};\n\nvar ProfileTitle = function ProfileTitle(_ref) {\n  var title = _ref.title;\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("h1", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(profileTitle(title), " ", MediaQuery.mq[2], "{font-size:2rem;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, title);\n};\n\n/* harmony default export */ const main_ProfileTitle = (ProfileTitle);\n;// CONCATENATED MODULE: ./src/layouts/profile/ProfileLayout.js\nvar _templateObject;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/* eslint-disable consistent-return */\n\n/** @jsx jsx */\n\n\n\n\nvar fadeIn = (0,emotion_react_browser_esm/* keyframes */.F4)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\\n  from {\\n    opacity: 0;\\n    transform: translateY(30px);\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n"])));\nvar profileContainer =\n/*#__PURE__*/\n\n/*#__PURE__*/\n(0,emotion_react_browser_esm/* css */.iv)("display:flex;flex-direction:column;align-items:center;padding:1rem;div{animation:", fadeIn, " 1s ease-in-out;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0);\n\nvar ProfileLayout = function ProfileLayout(_ref) {\n  var title = _ref.title,\n      content = _ref.content;\n\n  var _useState = (0,react.useState)(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showElement = _useState2[0],\n      setShowElement = _useState2[1];\n\n  var _useState3 = (0,react.useState)(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var scrollRef = (0,react.useRef)(null);\n  (0,react.useEffect)(function () {\n    if (!scrollRef.current) return;\n    var mounted = true;\n    window.addEventListener(\'scroll\', function () {\n      if (mounted) {\n        var scroll = scrollRef.current.getBoundingClientRect();\n        setShowElement(scroll.top <= 945);\n        setLoading(false);\n      }\n    });\n    return function () {\n      mounted = false;\n    };\n  }, [scrollRef.current]);\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css: profileContainer,\n    ref: scrollRef\n  }, showElement && (0,emotion_react_browser_esm/* jsx */.tZ)(react.Fragment, null, (0,emotion_react_browser_esm/* jsx */.tZ)(main_ProfileTitle, {\n    title: title\n  }), content));\n};\n\n/* harmony default export */ const profile_ProfileLayout = (ProfileLayout);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcBusinessContact.js\nvar FcBusinessContact = __webpack_require__(8795);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcPlanner.js\nvar FcPlanner = __webpack_require__(5638);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcMindMap.js\nvar FcMindMap = __webpack_require__(1525);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcGraduationCap.js\nvar FcGraduationCap = __webpack_require__(557);\n;// CONCATENATED MODULE: ./src/constants/About.js\n // import { FaGithub } from \'@react-icons/all-files/fa/FaGithub\';\n// import { FcTemplate } from \'@react-icons/all-files/fc/FcTemplate\';\n\n\n\n\n\n\nvar ABOUT = [{\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcBusinessContact/* FcBusinessContact */.A, {\n    size: 50\n  }),\n  name: \'이름\',\n  content: \'김동현\'\n}, {\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcPlanner/* FcPlanner */.D, {\n    size: 50\n  }),\n  name: \'생년월일\',\n  content: \'1993.01.21\'\n}, {\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcGraduationCap/* FcGraduationCap */.z, {\n    size: 50\n  }),\n  name: \'학력\',\n  content: \'서경대학교\'\n}, {\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcMindMap/* FcMindMap */.a, {\n    size: 50\n  }),\n  name: \'이메일\',\n  content: \'kdhsea@gmail.com\'\n} // {\n//   icon: <FaGithub size={50} color="rgba(0, 0, 0, 0.7)" />,\n//   name: \'깃허브\',\n//   content: \'github.com/aosjehdgus\',\n// },\n// {\n//   icon: <FcTemplate size={50} />,\n//   name: \'블로그\',\n//   content: \'aosjehdgus.tistory.com\',\n// },\n];\n/* harmony default export */ const About = (ABOUT);\n;// CONCATENATED MODULE: ./src/contents/profile/AboutContent.js\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\n\nvar aboutContentContainer =  true ? {\n  name: "3y57ss",\n  styles: "display:flex;flex-direction:column;justify-content:space-around;border-radius:1rem;padding:1rem;position:relative;width:80%;background:rgba(0, 0, 0, 0.01);header{padding:1rem;div{padding:0.5rem;h2{padding:0.2rem;font-size:1rem;line-height:1.5rem;color:rgba(0, 0, 0, 0.7);}p{padding:0.2rem;font-size:0.8rem;color:rgba(0, 0, 0, 0.5);line-height:1.5rem;}}}article{display:flex;padding:1rem;width:100%;justify-content:center;flex-wrap:wrap;}box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.03),inset 3px 3px 5px rgba(0, 0, 0, 0.03)"\n} : 0;\nvar contentWrapper =  true ? {\n  name: "xqxvc5",\n  styles: "display:flex;justify-content:space-between;align-items:center;padding:0.5rem;width:250px;svg{width:30px;height:30px;}div{display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-around;align-items:center;padding:0.5rem 0.5rem 0.5rem 1rem;h3{color:rgba(0, 0, 0, 0.7);font-size:0.9rem;}span{font-size:0.7rem;color:rgba(0, 0, 0, 0.7);margin-top:0.2rem;}}"\n} : 0;\n\nvar AboutContent = function AboutContent() {\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(aboutContentContainer, " ", MediaQuery.mq[2], "{width:60%;header{h2{font-size:1.5rem;line-height:2rem;}p{font-size:1rem;}}article{display:flex;padding:1rem;width:100%;justify-content:space-between;flex-wrap:wrap;}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("header", null, (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("h2", null, "\\uAE0D\\uC815\\uC801 \\uC7AC\\uB8CC\\uB85C \\uC18C\\uD1B5\\uD558\\uB294"), (0,emotion_react_browser_esm/* jsx */.tZ)("h2", null, "\\uAE0D\\uC815 \\uAC1C\\uBC1C\\uC790")), (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("p", null, "\\"\\uC548\\uB155\\uD558\\uC138\\uC694. \\uC800\\uB294 \\uC7AC\\uB8CC\\uACF5\\uD559 \\uCD9C\\uC2E0 \\uD504\\uB860\\uD2B8 \\uC5D4\\uB4DC \\uAC1C\\uBC1C\\uC790 \\uAE40\\uB3D9\\uD604 \\uC785\\uB2C8\\uB2E4.\\""), (0,emotion_react_browser_esm/* jsx */.tZ)("p", null, "\\uC7AC\\uB8CC\\uB97C \\uB2E4\\uB8E8\\uBA70 \\uBB34\\uC5B8\\uAC00 \\uC0C8\\uB86D\\uAC8C \\uB9CC\\uB4DC\\uB294 \\uAC83\\uC5D0 \\uD765\\uBBF8\\uB97C \\uAC00\\uC9C0\\uBA74\\uC11C \\uAC1C\\uBC1C\\uC744 \\uC2DC\\uC791\\uD558\\uAC8C \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4"))), (0,emotion_react_browser_esm/* jsx */.tZ)("article", null, About.map(function (_ref) {\n    var icon = _ref.icon,\n        name = _ref.name,\n        content = _ref.content;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)("section", {\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      (0,emotion_react_browser_esm/* css */.iv)(contentWrapper, " ", MediaQuery.mq[2], "{div{h3{font-size:1rem;}span{font-size:0.8rem;}}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0),\n      key: name\n    }, icon, (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("h3", null, name), (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, content)));\n  })));\n};\n\n/* harmony default export */ const profile_AboutContent = (AboutContent);\n// EXTERNAL MODULE: ./asset/tistory.svg\nvar tistory = __webpack_require__(2029);\n// EXTERNAL MODULE: ./asset/octocat.jpg\nvar octocat = __webpack_require__(5663);\n;// CONCATENATED MODULE: ./src/constants/Archive.js\n\n\n\n\nvar ARCHIVE = [{\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "octocat",\n    src: octocat\n  }),\n  title: \'Github\',\n  link: \'github.com/aosjehdgus\',\n  description: "\\uC18C\\uC2A4 \\uCF54\\uB4DC \\uAE30\\uB85D \\uC800\\uC7A5\\uC18C",\n  contents: [\'프로젝트, 프로덕트, 앱의 소스 코드\', \'혼자서 연습을 진행 했던 소스 코드\']\n}, {\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "tistory",\n    src: tistory\n  }),\n  title: \'Tistory\',\n  link: \'aosjehdgus.tistory.com\',\n  description: \'학습 내용 및 지식을 공유하는 블로그\',\n  contents: [\'웹 개발자로서 공부한 지식 정리\', \'개발하면서 발생한 이슈 정리\', \'같은 문제를 겪는 사람들을 위한 지식 공유\', \'똑같은 실수를 반복하지 않기 위한 기록\']\n}];\n/* harmony default export */ const Archive = (ARCHIVE);\n;// CONCATENATED MODULE: ./src/contents/profile/ArchiveContent.js\nfunction ArchiveContent_EMOTION_STRINGIFIED_CSS_ERROR_() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\n\nvar archiveContentContainer =  true ? {\n  name: "eq6sl5",\n  styles: "display:flex;flex-direction:column;align-items:center;width:90%;border-radius:1rem;padding:0.5rem;position:relative"\n} : 0;\nvar ArchiveContent_contentWrapper =  true ? {\n  name: "132lpyu",\n  styles: "display:flex;flex-direction:column;width:80%;justify-content:space-between;padding:1rem;border-radius:12px;background:rgba(0, 0, 0, 0.01);text-decoration:none;margin:0.5rem;box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.03),inset 3px 3px 5px rgba(0, 0, 0, 0.03);transition:all 0.8s;&:hover{transform:scale(0.95);}header{display:flex;justify-content:center;align-items:center;padding:1rem;h3{color:rgba(0, 0, 0, 0.7);font-size:1.2rem;margin-left:1rem;font-weight:700;}img{width:1.5rem;}}article{display:flex;flex-direction:column;flex-grow:3;padding:1rem;span{font-size:0.7rem;color:rgba(0, 0, 0, 0.6);padding:0.5rem;font-weight:900;line-height:1.5rem;}ul{list-style-type:disc;margin-top:1rem;li{font-size:0.7rem;padding:0.5rem;color:rgba(0, 0, 0, 0.5);}}}"\n} : 0;\n\nvar ArchiveContent = function ArchiveContent() {\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(archiveContentContainer, " ", MediaQuery.mq[2], "{display:flex;flex-direction:row;width:64%;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, Archive.map(function (_ref) {\n    var icon = _ref.icon,\n        title = _ref.title,\n        link = _ref.link,\n        description = _ref.description,\n        contents = _ref.contents;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)("a", {\n      target: "_blank",\n      href: "https://".concat(link),\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      (0,emotion_react_browser_esm/* css */.iv)(ArchiveContent_contentWrapper, " ", MediaQuery.mq[2], "{width:90%;height:320px;header{h3{font-size:1.3rem;}img{width:2rem;}}article{span{font-size:0.8rem;}ul{li{font-size:0.7rem;}}}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0),\n      rel: "noreferrer",\n      key: title\n    }, (0,emotion_react_browser_esm/* jsx */.tZ)("header", null, icon, (0,emotion_react_browser_esm/* jsx */.tZ)("h3", null, title)), (0,emotion_react_browser_esm/* jsx */.tZ)("article", null, (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, description), (0,emotion_react_browser_esm/* jsx */.tZ)("ul", null, contents.map(function (content) {\n      return (0,emotion_react_browser_esm/* jsx */.tZ)("li", {\n        key: content\n      }, content);\n    }))));\n  }));\n};\n\n/* harmony default export */ const profile_ArchiveContent = (ArchiveContent);\n// EXTERNAL MODULE: ./asset/react.svg\nvar asset_react = __webpack_require__(7521);\n// EXTERNAL MODULE: ./asset/redux.svg\nvar redux = __webpack_require__(5228);\n// EXTERNAL MODULE: ./asset/redux-saga.svg\nvar redux_saga = __webpack_require__(5151);\n// EXTERNAL MODULE: ./asset/webpack.svg\nvar webpack = __webpack_require__(6128);\n// EXTERNAL MODULE: ./asset/postman.svg\nvar postman = __webpack_require__(762);\n// EXTERNAL MODULE: ./asset/aws.svg\nvar aws = __webpack_require__(9086);\n// EXTERNAL MODULE: ./asset/git.svg\nvar git = __webpack_require__(9751);\n// EXTERNAL MODULE: ./asset/mongodb.svg\nvar mongodb = __webpack_require__(3470);\n// EXTERNAL MODULE: ./asset/nodejs.svg\nvar nodejs = __webpack_require__(308);\n// EXTERNAL MODULE: ./asset/babel.svg\nvar babel = __webpack_require__(7388);\n;// CONCATENATED MODULE: ./src/constants/Skill.js\n\n\n\n\n // import NestJsLogo from \'../../asset/nestjs.svg\';\n\n\n // import BitbucketLogo from \'../../asset/bitbucket.svg\';\n\n // import GithubLogo from \'../../asset/github.svg\';\n\n\n // import SourceTreeLogo from \'../../asset/sourcetree.svg\';\n\n\n\nvar FRONT_SKILL = [{\n  name: \'React\',\n  description: \'\',\n  proficiency: 72,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: asset_react\n  })\n}, {\n  name: \'Redux\',\n  description: \'\',\n  proficiency: 70,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: redux\n  })\n}, {\n  name: \'Redux-saga\',\n  description: \'\',\n  proficiency: 67,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: redux_saga\n  })\n}, {\n  name: \'Webpack\',\n  description: \'\',\n  proficiency: 57,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: webpack\n  })\n}, {\n  name: \'Babel\',\n  description: \'\',\n  proficiency: 43,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "babel",\n    src: babel\n  })\n}];\nvar BACK_SKILL = [{\n  name: \'Node.js\',\n  description: \'\',\n  proficiency: 51,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: nodejs\n  })\n}, {\n  name: \'MongoDB\',\n  description: \'\',\n  proficiency: 53,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: mongodb\n  })\n}, // {\n//   name: \'Nest.js\',\n//   description: \'\',\n//   proficiency: 12,\n//   icon: <img alt="react" src={NestJsLogo} />,\n// },\n{\n  name: \'Postman\',\n  description: \'Postman 재밌다\',\n  proficiency: 62,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: postman\n  })\n}];\nvar CLOUD_SKILL = [{\n  name: \'AWS\',\n  proficiency: 51,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: aws\n  })\n}, {\n  name: \'Git\',\n  proficiency: 52,\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "react",\n    src: git\n  })\n} // {\n//   name: \'Github\',\n//   proficiency: 53,\n//   icon: <img alt="react" src={GithubLogo} />,\n// },\n// {\n//   name: \'Bitbucket\',\n//   proficiency: 54,\n//   icon: <img alt="react" src={BitbucketLogo} />,\n// },\n// {\n//   name: \'Sourcetree\',\n//   proficiency: 52,\n//   icon: <img alt="sourcetree" src={SourceTreeLogo} />,\n// },\n];\nvar SKILL = [].concat(FRONT_SKILL, BACK_SKILL, CLOUD_SKILL);\n/* harmony default export */ const Skill = ((/* unused pure expression or super */ null && (SKILL)));\n;// CONCATENATED MODULE: ./src/contents/profile/SkillContent.js\nfunction SkillContent_EMOTION_STRINGIFIED_CSS_ERROR_() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\n\nvar skillContentContainer =  true ? {\n  name: "mx3nvb",\n  styles: "display:flex;justify-content:space-around;border-radius:1rem;padding:0.5rem;position:relative;background:rgba(0, 0, 0, 0.01);width:80%;box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.03),inset 3px 3px 5px rgba(0, 0, 0, 0.03);article{display:flex;padding:0.5rem;width:100%;justify-content:center;flex-wrap:wrap;}"\n} : 0;\nvar skillContentWrapper =  true ? {\n  name: "1k6xmja",\n  styles: "display:flex;justify-content:space-between;align-items:center;padding:0.5rem;width:240px;img{width:1.5rem;}div{display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-around;padding:0.5rem 0.5rem 0.5rem 1rem;h3{color:rgba(0, 0, 0, 0.7);font-size:0.8rem;margin-bottom:0.4rem;}progress[value]::-webkit-progress-bar{background-color:whitesmoke;box-shadow:0 2px 5px rgba(0, 0, 0, 0.25) inset;}progress[value]{appearance:none;border-radius:15px;overflow:hidden;position:relative;display:flex;align-items:center;width:100%;}progress[value]::-webkit-progress-value{background-image:linear-gradient(to right, #7cb9e8, #318ce7);}label{font-size:0.7rem;margin-top:0.1rem;color:rgba(0, 0, 0, 0.7);}}"\n} : 0;\n\nvar SkillContent = function SkillContent() {\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(skillContentContainer, " ", MediaQuery.mq[2], "{width:60%;article{display:flex;padding:0.5rem;width:100%;justify-content:space-between;flex-wrap:wrap;}img{width:2rem;}h3{color:rgba(0, 0, 0, 0.7);font-size:1rem;margin-bottom:0.4rem;}label{font-size:0.8rem;}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("article", null, SKILL.map(function (_ref) {\n    var icon = _ref.icon,\n        name = _ref.name,\n        proficiency = _ref.proficiency;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)("section", {\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      (0,emotion_react_browser_esm/* css */.iv)(skillContentWrapper, " ", MediaQuery.mq[2], "{width:200px;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0),\n      key: name\n    }, icon, (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("h3", null, name), (0,emotion_react_browser_esm/* jsx */.tZ)("progress", {\n      id: "proficiency",\n      value: proficiency,\n      max: "100"\n    }), (0,emotion_react_browser_esm/* jsx */.tZ)("label", {\n      htmlFor: "proficiency"\n    }, "\\uC219\\uB828\\uB3C4 : ", proficiency, " %")));\n  })));\n};\n\n/* harmony default export */ const profile_SkillContent = (SkillContent);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcNext.js\nvar FcNext = __webpack_require__(1635);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcPrevious.js\nvar FcPrevious = __webpack_require__(2612);\n;// CONCATENATED MODULE: ./src/constants/Activity.js\nvar ACTIVITY_PERIOD = [{\n  key: 1,\n  year: \'2022 - 2021\'\n}, {\n  key: 2,\n  year: \'2020 - 2013\'\n}];\nvar ACTIVITY = [{\n  key: 1,\n  year: \'2022 - 2021\',\n  content: [{\n    period: \'2021년 11월 - 현재\',\n    description: \'국립 국어원 주관 비윤리적 표현 말뭉치 연구 분석 및 시범 구축 사업\',\n    role: \'프론트 엔드 개발자로 참여\',\n    detail: [\'로그인 페이지 개발\', \'회원 가입 페이지 개발\', \'회원 정보 인증 페이지 개발\', \'비윤리적 표현 항목별 평가 페이지 개발\', \'작업자별 진행률 확인 페이지 개발\', \'공지사항 페이지 개발\']\n  }, {\n    period: \'2021년 11월\',\n    description: \'(주) 미디어 코퍼스로 소속 변경\'\n  }, {\n    period: \'2021년 5월 - 2021년 9월\',\n    description: \'국립 국어원 주관 말뭉치 언어의 사회적 인식 조사 분류 사업\',\n    role: \'프론트 엔드 개발자로 참여\',\n    detail: [\'로그인 페이지 개발\', \'비밀번호 변경 페이지 개발\', \'말뭉치 라벨링 컨텍스트 메뉴 개발\', \'작업자별 진행률 확인 페이지 개발\', \'파일별 완료율 확인 페이지 게발\', \'완료 파일 검수 페이지 개발\']\n  }, {\n    period: \'2021년 4월\',\n    description: \'긱웍스 에아이이 입사\'\n  }]\n}, {\n  key: 2,\n  year: \'2020 - 2013\',\n  content: [{\n    period: \'2020년 5월 - 2020년 11월\',\n    description: \'한국품질재단 AI 개발자 양성 과정 수료\',\n    role: \'\',\n    detail: []\n  }, {\n    period: \'2019년 1월 - 2019년 12월\',\n    description: \'나노융합공학과 8대 학생회 과대표\',\n    role: \'\',\n    detail: []\n  }, {\n    period: \'2018년 1월 - 2018년 12월\',\n    description: \'나노융합공학과 9대 학생회 정학생회장\',\n    role: \'\',\n    detail: []\n  }, {\n    period: \'2013년 1월 - 2013년 12월\',\n    description: \'나노융합공학과 2대 학생회 과대표\',\n    role: \'\',\n    detail: []\n  }]\n}];\n;// CONCATENATED MODULE: ./src/contents/profile/ActivityContent.js\nfunction ActivityContent_slicedToArray(arr, i) { return ActivityContent_arrayWithHoles(arr) || ActivityContent_iterableToArrayLimit(arr, i) || ActivityContent_unsupportedIterableToArray(arr, i) || ActivityContent_nonIterableRest(); }\n\nfunction ActivityContent_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction ActivityContent_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return ActivityContent_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ActivityContent_arrayLikeToArray(o, minLen); }\n\nfunction ActivityContent_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ActivityContent_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ActivityContent_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ActivityContent_EMOTION_STRINGIFIED_CSS_ERROR_() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\n\n\n\nvar activityContainer =  true ? {\n  name: "9g5fsd",\n  styles: "display:flex;width:80%;flex-direction:column;justify-content:center;align-items:center;border-radius:1rem;padding:0.5rem;position:relative;background:rgba(0, 0, 0, 0.01);box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.03),inset 3px 3px 5px rgba(0, 0, 0, 0.03)"\n} : 0;\nvar activityContent =  true ? {\n  name: "1u0lywb",\n  styles: "display:flex;justify-content:space-between;padding:0.5rem;border-radius:12px;width:100%;text-decoration:none;margin-top:0.5rem;transition:all 0.5s"\n} : 0;\nvar activity =  true ? {\n  name: "z3lbmp",\n  styles: "display:flex;flex-direction:column;width:100%;height:100%;justify-content:space-around;div{display:flex;padding:0.3rem;section{display:flex;flex-direction:column;align-items:baseline;padding:0.5rem;h4{color:rgba(0, 0, 0, 0.7);font-size:0.9rem;padding:0.5rem;line-height:1.5rem;}span{color:rgba(0, 0, 0, 0.7);font-size:0.7rem;padding:0.5rem;line-height:1.5rem;}ul{font-size:0.6rem;color:rgba(0, 0, 0, 0.6);padding:0.5rem;line-height:1.5rem;}ul:hover{display:none;transition:all 1s;}}&:nth-child(odd){justify-content:flex-start;}&:nth-child(even){justify-content:flex-end;}}"\n} : 0;\nvar buttonContainer =  true ? {\n  name: "1el6c50",\n  styles: "display:flex;justify-content:space-between;align-items:center;border-radius:12px;text-decoration:none;height:120px"\n} : 0;\n\nvar yearButton = function yearButton(prop) {\n  return (\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)("padding:0.5rem;border:0;background:inherit;margin:0.5rem;color:", prop === true ? \'rgba(0,0,0,0.7)\' : \'rgba(0,0,0,0.5)\', ";font-size:", prop === true ? \'1.3rem\' : \'0.9rem\', ";font-weight:", prop === true ? \'900\' : \'500\', ";transition:all 1s;transform:", prop === true ? \'translateY(5%)\' : \'translateY(-5%)\', ";cursor:pointer;" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  );\n};\n\nvar moveButton =  true ? {\n  name: "1up04r0",\n  styles: "display:flex;justify-content:center;aling-items:center;padding:1rem;border-radius:1rem;background:inherit;border:0;cursor:pointer;&:hover{background:rgba(0, 0, 0, 0.1);}"\n} : 0;\nvar TOTAL_SLIDE = ACTIVITY_PERIOD.length;\n\nvar CareerContent = function CareerContent() {\n  var _useState = (0,react.useState)(1),\n      _useState2 = ActivityContent_slicedToArray(_useState, 2),\n      slide = _useState2[0],\n      setSlide = _useState2[1];\n\n  var handleSlide = function handleSlide(prop) {\n    setSlide(prop);\n  };\n\n  var prevButton = function prevButton() {\n    if (slide === 1) {\n      setSlide(TOTAL_SLIDE);\n    } else {\n      setSlide(slide - 1);\n    }\n  };\n\n  var nextButton = function nextButton() {\n    if (slide === TOTAL_SLIDE) {\n      setSlide(1);\n    } else {\n      setSlide(slide + 1);\n    }\n  };\n\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(activityContainer, " ", MediaQuery.mq[2], "{width:60%;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(buttonContainer, ";" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("button", {\n    type: "button",\n    onClick: prevButton,\n    css: moveButton\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)(FcPrevious/* FcPrevious */.l, null)), ACTIVITY_PERIOD.map(function (_ref) {\n    var key = _ref.key,\n        year = _ref.year;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)("button", {\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      (0,emotion_react_browser_esm/* css */.iv)(yearButton(slide === key), " ", MediaQuery.mq[2], "{font-size:", slide === key === true ? \'2rem\' : \'1.5rem\', ";}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0),\n      type: "button",\n      key: key,\n      onClick: function onClick() {\n        return handleSlide(key);\n      }\n    }, year);\n  }), (0,emotion_react_browser_esm/* jsx */.tZ)("button", {\n    type: "button",\n    onClick: nextButton,\n    css: moveButton\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)(FcNext/* FcNext */.U, null))), (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css: activityContent\n  }, ACTIVITY.map(function (_ref2) {\n    var key = _ref2.key,\n        content = _ref2.content;\n    return slide === key ? (0,emotion_react_browser_esm/* jsx */.tZ)("article", {\n      key: key,\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      (0,emotion_react_browser_esm/* css */.iv)(activity, " ", MediaQuery.mq[2], "{div{section{h4{font-size:1rem;}span{font-size:0.9rem;}ul{font-size:0.7rem;}}}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n    }, content.map(function (_ref3) {\n      var period = _ref3.period,\n          description = _ref3.description,\n          role = _ref3.role;\n      return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n        key: description\n      }, (0,emotion_react_browser_esm/* jsx */.tZ)("section", null, (0,emotion_react_browser_esm/* jsx */.tZ)("h4", null, period), (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, description), role ? (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, role) : \'\'));\n    })) : \'\';\n  })));\n};\n\n/* harmony default export */ const ActivityContent = (CareerContent);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcFaq.js\nvar FcFaq = __webpack_require__(280);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcShop.js\nvar FcShop = __webpack_require__(2429);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcList.js\nvar FcList = __webpack_require__(508);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcTemplate.js\nvar FcTemplate = __webpack_require__(7989);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcFinePrint.js\nvar FcFinePrint = __webpack_require__(967);\n// EXTERNAL MODULE: ./node_modules/@react-icons/all-files/fc/FcRegisteredTrademark.js\nvar FcRegisteredTrademark = __webpack_require__(3400);\n// EXTERNAL MODULE: ./asset/lonnie.png\nvar lonnie = __webpack_require__(8508);\n// EXTERNAL MODULE: ./asset/dike-img.png\nvar dike_img = __webpack_require__(7488);\n// EXTERNAL MODULE: ./asset/nikl-img.png\nvar nikl_img = __webpack_require__(3734);\n// EXTERNAL MODULE: ./asset/dongle-img.png\nvar dongle_img = __webpack_require__(8426);\n// EXTERNAL MODULE: ./asset/management.png\nvar management = __webpack_require__(7232);\n// EXTERNAL MODULE: ./asset/login-product.png\nvar login_product = __webpack_require__(3939);\n// EXTERNAL MODULE: ./asset/mat-img.png\nvar mat_img = __webpack_require__(3818);\n;// CONCATENATED MODULE: ./src/constants/Project.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n // id,\n// key,\n// title,\n// startDate,\n// endDate,\n// description,\n// summary,\n// github,\n// frontend,\n// backend,\n// database,\n// build,\n// deploy,\n\n\nvar PROJECT = [{\n  id: \'1\',\n  key: \'lonnie\',\n  title: "Lonnie\'s Portfolio",\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcFinePrint/* FcFinePrint */.g, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "dike",\n    src: lonnie\n  }),\n  description: "\\uD604\\uC7AC \\uBCF4\\uACE0 \\uAC8C\\uC2DC\\uB294 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4. CRA\\uB97C \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uACE0 \\uC9C1\\uC811 React \\uAC1C\\uBC1C \\uD658\\uACBD\\uC744 \\uAD6C\\uCD95\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uB85C,\\n    Webpack\\uC744 \\uCEE4\\uC2A4\\uD130 \\uB9C8\\uC774\\uC9D5 \\uD558\\uBA70 \\uC791\\uC5C5\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4. \\uC2A4\\uD0C0\\uC77C \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB294 Emotion\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA70 css-in-js\\uB97C \\uC801\\uC6A9\\uD588\\uC2B5\\uB2C8\\uB2E4. Github pages\\uB97C \\uD1B5\\uD574 \\uBC30\\uD3EC\\uB97C \\uC9C4\\uD589\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4.\\n    ",\n  startDate: \'2022.02\',\n  endDate: \'2022.03\',\n  github: \'https://github.com/aosjehdgus/lonnie-portfolio\',\n  summary: [\'내 정보\', \' 블로그 및 깃허브\', \' 개발 스킬 숙련도\', \' 활동 및 경력 사항\', \' 프로젝트 별 요약\'],\n  frontend: [\'React\', \' SWR\', \' Emotion\'],\n  backend: [\'Node\', \' Nest\'],\n  database: \'PostgreSQL\',\n  build: [\'Webpack\', \' Babel\'],\n  deploy: \'Github pages\'\n}, {\n  id: \'2\',\n  key: \'dike\',\n  title: \'Dike Project\',\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcFinePrint/* FcFinePrint */.g, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "dike",\n    src: dike_img\n  }),\n  description: "\\uAD6D\\uB9BD\\uAD6D\\uC5B4\\uC6D0, \\uC11C\\uC6B8 \\uAD50\\uB300\\uC640 \\uD568\\uAED8 \\uC9C4\\uD589\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uB85C AI \\uD559\\uC2B5\\uC744 \\uC704\\uD55C \\uAC00\\uACF5\\uB41C \\uB370\\uC774\\uD130\\uB97C \\uB9CC\\uB4DC\\uB294 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC9C4\\uD589\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4.\\n  \\uBE44\\uC724\\uB9AC\\uC801 \\uD45C\\uD604\\uC744 \\uC815\\uD574\\uC9C4 \\uAE30\\uC900\\uC5D0 \\uB9DE\\uAC8C \\uD3C9\\uAC00\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uB3C4\\uC640\\uC8FC\\uB294 \\uC800\\uC791 \\uB3C4\\uAD6C\\uB97C \\uAC1C\\uBC1C\\uD558\\uACE0 \\uC791\\uC5C5 \\uD604\\uD669\\uC744 \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uB294 admin \\uD398\\uC774\\uC9C0\\uB97C \\uAC1C\\uBC1C \\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4. \\uD504\\uB860\\uD2B8 \\uC5D4\\uB4DC \\uAC1C\\uBC1C\\uC744\\n   \\uC804\\uB2F4\\uD574\\uC11C \\uB9E1\\uC544\\uC11C \\uC9C4\\uD589\\uD558\\uC600\\uACE0, \\uBC31\\uC5D4\\uB4DC \\uB370\\uC774\\uD130 \\uC5C5\\uB85C\\uB4DC \\uBC0F \\uC815\\uC81C \\uC791\\uC5C5\\uC744 \\uC778\\uC218\\uC778\\uACC4 \\uBC1B\\uC544 \\uC9C4\\uD589\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4\\n    ",\n  startDate: \'2021.11\',\n  endDate: \'2022.04\',\n  github: \'\',\n  summary: [\'비윤리적 표현 평가\', \' 작업 패스\', \' 작업 진행률 확인\', \' 로그인\', \' 회원 가입 및 인증\'],\n  frontend: [\'React\', \' Redux-toolkit\', \' Redux-saga\', \' Material-UI\'],\n  backend: [\'Node\', \' Sails\'],\n  database: \'MongoDB\',\n  build: [],\n  deploy: \'AWS CloudFront\'\n}, {\n  id: \'3\',\n  key: \'nikl\',\n  title: \'Nikl Project\',\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcFaq/* FcFaq */.F, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "nikl",\n    src: nikl_img\n  }),\n  description: "\\uAD6D\\uB9BD \\uAD6D\\uC5B4\\uC6D0, \\uC911\\uC559 \\uB300\\uD559\\uAD50\\uC640 \\uD568\\uAED8 \\uC9C4\\uD589\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uB85C raw \\uB370\\uC774\\uD130\\uC5D0\\uC11C \\uBE44\\uC724\\uB9AC\\uC801 \\uD45C\\uD604\\uC744 \\uC120\\uBCC4\\uD558\\uAE30 \\uC704\\uD574 6\\uAC00\\uC9C0 \\uD56D\\uBAA9\\uC758 \\uBCC4\\uB3C4 \\uCEE8\\uD14D\\uC2A4\\uD2B8 \\uBA54\\uB274\\uB97C \\uAC1C\\uBC1C\\uD558\\uACE0, \\uB77C\\uBCA8\\uB9C1 \\uD560 \\uC218 \\uC788\\uB294 \\uC800\\uC791 \\uB3C4\\uAD6C\\uB97C \\uAC1C\\uBC1C\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4.\\n    \\uC791\\uC5C5\\uC790\\uB4E4\\uC758 \\uC694\\uAD6C \\uBC0F \\uC560\\uB85C \\uC0AC\\uD56D\\uC744 \\uC2E4\\uC2DC\\uAC04\\uC73C\\uB85C \\uBC18\\uC601\\uD558\\uBA70 \\uAC1C\\uBC1C\\uC744 \\uC9C4\\uD589\\uD558\\uC600\\uACE0 \\uD504\\uB860\\uD2B8 \\uC5D4\\uB4DC \\uAC1C\\uBC1C\\uC744 \\uC804\\uB2F4\\uD574\\uC11C \\uB9E1\\uC558\\uC2B5\\uB2C8\\uB2E4.\\n    ",\n  startDate: \'2021.05\',\n  endDate: \'2021.09\',\n  github: \'\',\n  summary: [\'비윤리적 표현 태깅\', \' 데이터 필터링 및 정렬 기능\', \' 로그인\', \' 비밀번호 변경\'],\n  frontend: [\'React\', \' Redux\', \' Redux-saga\', \'Ant-Design\'],\n  backend: [\'Node\', \' Sails\'],\n  database: \'MongoDB\',\n  build: [],\n  deploy: \'AWS CloudFront\'\n}, {\n  id: \'4\',\n  key: \'management\',\n  title: \'Management Client\',\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcList/* FcList */.f, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "nikl",\n    src: management\n  }),\n  description: "\\uACE0\\uAC1D \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uBC1B\\uC544\\uC624\\uACE0, \\uCD94\\uAC00, \\uC0AD\\uC81C, \\uAC80\\uC0C9 \\uAE30\\uB2A5\\uC744 \\uD1B5\\uD574 \\uACE0\\uAC1D\\uC744 \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uB294 \\uD504\\uB85C\\uB355\\uD2B8\\uB97C \\uB9CC\\uB4E0 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC785\\uB2C8\\uB2E4.",\n  startDate: \'2021.03\',\n  endDate: \'2021.03\',\n  github: \'https://github.com/aosjehdgus/management-product\',\n  summary: [\'고객 조회\', \' 고객 추가\', \' 고객 삭제\', \' 고객 검색\'],\n  frontend: [\'React\', \' Material-UI\'],\n  backend: [\'Node\', \' Express\'],\n  database: \'AWS RDS (MySql)\',\n  build: [],\n  deploy: \'\'\n}, {\n  id: \'5\',\n  key: \'login\',\n  title: \'Login Product\',\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcRegisteredTrademark/* FcRegisteredTrademark */.K, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "nikl",\n    src: login_product\n  }),\n  description: "\\uAC04\\uB2E8\\uD55C \\uB85C\\uADF8\\uC778 \\uD504\\uB85C\\uB355\\uD2B8\\uB97C \\uD480\\uC2A4\\uD14D\\uC73C\\uB85C \\uAD6C\\uD604\\uD574\\uBCF8 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC785\\uB2C8\\uB2E4.",\n  startDate: \'2021.03\',\n  endDate: \'2021.03\',\n  github: \'https://github.com/aosjehdgus/login-product\',\n  summary: [\'간단한 로그인 기능\'],\n  frontend: [\'React\', \' Mobx\'],\n  backend: [\'Node\', \' Express\'],\n  database: \'MySql\',\n  build: [],\n  deploy: \'\'\n}, {\n  id: \'6\',\n  key: \'dongle\',\n  title: "dongle\'s portfoilo",\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcTemplate/* FcTemplate */.t, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "nikl",\n    src: dongle_img\n  }),\n  description: "\\uC800\\uC758 \\uC774\\uC804 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uB0B4\\uC6A9\\uC744 \\uB2F4\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAC04\\uB2E8\\uD55C \\uAE30\\uB2A5\\uB4E4\\uC744 \\uAD6C\\uD604\\uD574\\uBCF4\\uBA70 \\uB9CC\\uB4E4\\uC5B4\\uBCF8 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC785\\uB2C8\\uB2E4.",\n  startDate: \'2020.12\',\n  endDate: \'2021.03\',\n  github: \'https://github.com/aosjehdgus/dongle-s-portfolio\',\n  summary: [\'프로필\', \' 사용 기술\', \' 프로젝트 소개\', \' 보유 역량\'],\n  frontend: [\'HTML\', \' CSS\', \' Javascript\'],\n  backend: [],\n  database: \'\',\n  build: [],\n  deploy: \'\'\n}, {\n  id: \'7\',\n  key: \'mat\',\n  title: \'맛.zip project\',\n  icon: (0,emotion_react_browser_esm/* jsx */.tZ)(FcShop/* FcShop */.L, {\n    size: 50\n  }),\n  image: (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: "nikl",\n    src: mat_img\n  }),\n  description: "\\uB9DB.zip\\uC740 \\u2018\\uB9DB\\uC758 \\uC54C\\uC9D1\\uC744 \\uD47C\\uB2E4\\u2019\\uB294 \\uC758\\uBBF8\\uB97C \\uC9C0\\uB2C8\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\n    \\uC54C\\uC9D1\\uC758 \\uB0B4\\uC6A9\\uC740 \\uC694\\uB9AC\\uC758 \\uB808\\uC2DC\\uD53C\\uB97C \\uC804\\uB2EC\\uD558\\uACE0,\\n    \\uB0C9\\uC7A5\\uACE0 \\uAD00\\uB9AC, \\uC7A5\\uBCF4\\uAE30 \\uBA54\\uBAA8 \\uAE30\\uB2A5\\uC744 \\uB2F4\\uACE0 \\uC788\\uB294 \\uC11C\\uBE44\\uC2A4 \\uC785\\uB2C8\\uB2E4. \\uB0C9\\uC7A5\\uACE0 \\uAD00\\uB9AC \\uD398\\uC774\\uC9C0 \\uAC1C\\uBC1C\\uC744 \\uB9E1\\uC558\\uC2B5\\uB2C8\\uB2E4.\\n    ",\n  startDate: \'2020.06\',\n  endDate: \'2020.07\',\n  github: \'https://github.com/aosjehdgus/Mat.zip\',\n  summary: [\'재고 확인\', \' 신선도 체크\', \' 식재료 메모 기능\'],\n  frontend: [\'HTML\', \' CSS\', \' Javascript\'],\n  backend: [],\n  database: \'\',\n  build: [],\n  deploy: \'\'\n}];\n/* harmony default export */ const Project = (PROJECT);\n// EXTERNAL MODULE: ./node_modules/lodash/core.js\nvar core = __webpack_require__(8519);\n;// CONCATENATED MODULE: ./src/components/carousel/Slide.js\nfunction Slide_EMOTION_STRINGIFIED_CSS_ERROR_() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n/* eslint-disable no-nested-ternary */\n\n\n\n\n\n\n\n\n\n\n\n\nvar Slide_contentWrapper =  true ? {\n  name: "gkiqh3",\n  styles: "width:100%;height:fit-content;display:flex;flex-direction:column;justify-content:space-between;border-radius:12px;background:rgba(0, 0, 0, 0.01);text-decoration:none;box-shadow:inset -3px -3px 5px rgba(0, 0, 0, 0.03),inset 3px 3px 5px rgba(0, 0, 0, 0.03);header{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:0.5rem 1rem 0.5rem 1rem;div{display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%;height:100%;padding:1rem;h3{display:flex;padding:1rem;align-items:center;font-weight:700;font-size:1.2rem;line-height:1.5rem;color:rgba(0, 0, 0, 0.7);svg{margin-right:1rem;}}img{width:80%;height:auto;}p{font-size:0.8rem;font-weight:500;color:rgba(0, 0, 0, 0.5);margin-right:1rem;padding:0.5rem;}span{font-size:0.6rem;font-weight:500;color:rgba(0, 0, 0, 0.7);line-height:1.6rem;letter-spacing:0.05rem;padding:1.2rem;}}}ul{padding:1rem;border-top:1px solid rgba(0, 0, 0, 0.1);list-style-type:square;margin-left:0.5rem;display:flex;flex-direction:column;justify-content:space-around;li{display:flex;width:100%;justify-content:space-between;line-height:2rem;color:rgba(0, 0, 0, 0.7);span{text-transform:capitalize;}div{display:flex;width:150px;justify-content:flex-start;padding:0.1rem;border:0;span{font-size:0.6rem;color:rgba(0, 0, 0, 0.7);padding:0.2rem;text-transform:inherit;border:0;letter-spacing:0.05rem;}a{font-size:0.6rem;color:#99ccff;overflow:hidden;text-overflow:ellipsis;}}#title{font-weight:600;font-size:0.8rem;padding:0.2rem;}}}"\n} : 0;\n\nvar Slide = function Slide(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      description = _ref.description,\n      period = _ref.period,\n      development = _ref.development;\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("article", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(Slide_contentWrapper, " ", MediaQuery.mq[1], "{ul{li{div{width:fit-content;}}}}", MediaQuery.mq[2], "{header{padding:1.5rem;flex-direction:row;div{width:50%;h3{line-height:2.5rem;font-size:1.4rem;}p{font-size:1rem;}}}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("header", null, (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("h3", null, title), (0,emotion_react_browser_esm/* jsx */.tZ)("img", {\n    alt: title,\n    src: type === \'lonnie\' ? lonnie : type === \'dike\' ? dike_img : type === \'nikl\' ? nikl_img : type === \'management\' ? management : type === \'login\' ? login_product : type === \'dongle\' ? dongle_img : type === \'mat\' ? mat_img : \'\'\n  })), (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, (0,emotion_react_browser_esm/* jsx */.tZ)("p", null, period), (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, description))), (0,emotion_react_browser_esm/* jsx */.tZ)("ul", null, (0,core.map)(development, function (value, sort) {\n    return value.length !== 0 ? (0,emotion_react_browser_esm/* jsx */.tZ)("li", {\n      key: sort\n    }, (0,emotion_react_browser_esm/* jsx */.tZ)("span", {\n      id: "title"\n    }, sort), (0,emotion_react_browser_esm/* jsx */.tZ)("div", null, sort === \'github\' ? (0,emotion_react_browser_esm/* jsx */.tZ)("a", {\n      href: value,\n      target: "_blank",\n      rel: "noreferrer"\n    }, value) : (0,emotion_react_browser_esm/* jsx */.tZ)("span", null, "".concat(value)))) : \'\';\n  })));\n};\n\n/* harmony default export */ const carousel_Slide = (Slide);\n;// CONCATENATED MODULE: ./src/components/carousel/Slider.js\nfunction Slider_slicedToArray(arr, i) { return Slider_arrayWithHoles(arr) || Slider_iterableToArrayLimit(arr, i) || Slider_unsupportedIterableToArray(arr, i) || Slider_nonIterableRest(); }\n\nfunction Slider_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction Slider_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Slider_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Slider_arrayLikeToArray(o, minLen); }\n\nfunction Slider_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction Slider_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Slider_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction Slider_EMOTION_STRINGIFIED_CSS_ERROR_() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\n\n\n\nvar Container =  true ? {\n  name: "5z62l1",\n  styles: "width:90%;overflow:hidden;position:relative"\n} : 0;\nvar SliderContainer =  true ? {\n  name: "wfgc90",\n  styles: "width:100%;display:-webkit-box;height:60%"\n} : 0;\nvar SliderButtonContainer =  true ? {\n  name: "z7dd3l",\n  styles: "display:flex;height:fit-content;justify-content:space-between;position:absolute;top:30%;z-index:1;width:100%"\n} : 0;\nvar SliderButton =  true ? {\n  name: "l873ns",\n  styles: "all:unset;padding:0.5rem;border-radius:20px;position:relative;cursor:pointer;&:hover{transition:all 0.3s ease-in-out;background-color:rgba(0, 0, 0, 0.1);}"\n} : 0;\nvar Slider_TOTAL_SLIDE = 6;\n\nvar Slider = function Slider(_ref) {\n  var project = _ref.project;\n\n  var _useState = (0,react.useState)(0),\n      _useState2 = Slider_slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  var slideRef = (0,react.useRef)(null);\n\n  var prevSlide = function prevSlide() {\n    if (currentSlide === 0) {\n      setCurrentSlide(Slider_TOTAL_SLIDE);\n    } else {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  var nextSlide = function nextSlide() {\n    if (currentSlide >= Slider_TOTAL_SLIDE) {\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  var projectData = project === null || project === void 0 ? void 0 : project.map(function (_ref2) {\n    var id = _ref2.id,\n        key = _ref2.key,\n        title = _ref2.title,\n        startDate = _ref2.startDate,\n        endDate = _ref2.endDate,\n        description = _ref2.description,\n        summary = _ref2.summary,\n        github = _ref2.github,\n        frontend = _ref2.frontend,\n        backend = _ref2.backend,\n        database = _ref2.database,\n        build = _ref2.build,\n        deploy = _ref2.deploy;\n    return {\n      id: id,\n      key: key,\n      title: title,\n      period: "".concat(startDate, "-").concat(endDate),\n      description: description,\n      development: {\n        github: github,\n        summary: summary,\n        frontend: frontend,\n        backend: backend,\n        database: database,\n        build: build,\n        deploy: deploy\n      }\n    };\n  });\n  (0,react.useEffect)(function () {\n    slideRef.current.style.transition = \'all 0.5s ease-in-out\';\n    slideRef.current.style.transform = "translateX(-".concat(currentSlide, "00%)");\n  }, [currentSlide]);\n  return (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,emotion_react_browser_esm/* css */.iv)(Container, " ", MediaQuery.mq[2], "{width:60%;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css: SliderButtonContainer\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)("button", {\n    type: "button",\n    onClick: prevSlide,\n    css: SliderButton\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)(FcPrevious/* FcPrevious */.l, null)), (0,emotion_react_browser_esm/* jsx */.tZ)("button", {\n    type: "button",\n    onClick: nextSlide,\n    css: SliderButton\n  }, (0,emotion_react_browser_esm/* jsx */.tZ)(FcNext/* FcNext */.U, null))), (0,emotion_react_browser_esm/* jsx */.tZ)("div", {\n    css: SliderContainer,\n    ref: slideRef\n  }, projectData === null || projectData === void 0 ? void 0 : projectData.map(function (_ref3) {\n    var key = _ref3.key,\n        title = _ref3.title,\n        description = _ref3.description,\n        period = _ref3.period,\n        development = _ref3.development;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)(carousel_Slide, {\n      key: key,\n      type: key,\n      title: title,\n      description: description,\n      period: period,\n      development: development\n    });\n  })));\n};\n\n/* harmony default export */ const carousel_Slider = (Slider);\n;// CONCATENATED MODULE: ./src/contents/profile/ProjectContent.js\n\n // import useProject from \'../../hooks/useProject\';\n\n\n\n\nvar ProjectContent = function ProjectContent() {\n  // const { project } = useProject();\n  return (0,emotion_react_browser_esm/* jsx */.tZ)(carousel_Slider, {\n    project: Project\n  });\n};\n\n/* harmony default export */ const profile_ProjectContent = (ProjectContent);\n;// CONCATENATED MODULE: ./src/pages/Profile.js\n\n/* Layout */\n\n\n/* Content */\n\n\n\n\n\n\n\nvar profileConfig = [{\n  title: \'About\',\n  content: (0,emotion_react_browser_esm/* jsx */.tZ)(profile_AboutContent, null)\n}, {\n  title: \'Archive\',\n  content: (0,emotion_react_browser_esm/* jsx */.tZ)(profile_ArchiveContent, null)\n}, {\n  title: \'Skill\',\n  content: (0,emotion_react_browser_esm/* jsx */.tZ)(profile_SkillContent, null)\n}, {\n  title: \'Activity\',\n  content: (0,emotion_react_browser_esm/* jsx */.tZ)(ActivityContent, null)\n}, {\n  title: \'Project\',\n  content: (0,emotion_react_browser_esm/* jsx */.tZ)(profile_ProjectContent, null)\n}];\n\nvar Profile = function Profile() {\n  return (0,emotion_react_browser_esm/* jsx */.tZ)(react.Fragment, null, profileConfig.map(function (_ref) {\n    var title = _ref.title,\n        content = _ref.content;\n    return (0,emotion_react_browser_esm/* jsx */.tZ)(profile_ProfileLayout, {\n      key: title,\n      title: title,\n      content: content\n    });\n  }));\n};\n\n/* harmony default export */ const pages_Profile = (Profile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8442\n')},9086:(l,d,W)=>{l.exports=W.p+"images/2c1f65c5a7fb3fdd7a89.svg"},7388:(l,d,W)=>{l.exports=W.p+"images/37377d79d8010eb5e205.svg"},7488:(l,d,W)=>{l.exports=W.p+"images/f556b23ee231a5ed18c9.png"},8426:(l,d,W)=>{l.exports=W.p+"images/7fea438ef83a7086161a.png"},9751:(l,d,W)=>{l.exports=W.p+"images/c60b7e5ae8ec2562f23f.svg"},3939:(l,d,W)=>{l.exports=W.p+"images/d842d91e24bdb8c3a723.png"},8508:(l,d,W)=>{l.exports=W.p+"images/da1a6a636b4c30c671c4.png"},7232:(l,d,W)=>{l.exports=W.p+"images/ca2e55cc3a22bc4c3dc6.png"},3818:(l,d,W)=>{l.exports=W.p+"images/886c4db1c4c4df604144.png"},3470:(l,d,W)=>{l.exports=W.p+"images/1aca075d5cce0819fea7.svg"},3734:(l,d,W)=>{l.exports=W.p+"images/cfe7b875d4265ba8060b.png"},308:(l,d,W)=>{l.exports=W.p+"images/52cbf9a89f44655c0375.svg"},5663:(l,d,W)=>{l.exports=W.p+"images/2444c54fd88ae684e5a7.jpg"},762:(l,d,W)=>{l.exports=W.p+"images/e65afafee644ce9fe8a7.svg"},7521:(l,d,W)=>{l.exports=W.p+"images/928f956d9c8ebcffb98a.svg"},5151:(l,d,W)=>{l.exports=W.p+"images/7020de63dcc408a69b7a.svg"},5228:(l,d,W)=>{l.exports=W.p+"images/0e4fb1c819ac4c060c92.svg"},6128:(l,d,W)=>{l.exports=W.p+"images/f44900ae6538b4d77864.svg"}}]);