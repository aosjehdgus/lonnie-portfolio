"use strict";(self.webpackChunkfront_end=self.webpackChunkfront_end||[]).push([[568],{568:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(466);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(532);\n/* harmony import */ var _constants_MediaQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(946);\nvar _templateObject, _templateObject2;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }\n\n\n\n\n\nvar wrapperStyle =  true ? {\n  name: "1q1olxu",\n  styles: "display:flex;flex-direction:column;justify-content:center;align-items:center;background:rgb(255, 255, 255);margin:0;padding:0;border:0;height:calc(100vh - 140px)"\n} : 0;\nvar divStyle =  true ? {\n  name: "1ml07u0",\n  styles: "display:flex;justify-content:center;align-items:center;margin-bottom:15px"\n} : 0;\nvar typing = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .keyframes */ .F4)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\\n  40%, 60% {\\n    left: calc(100% + 30px);\\n  }\\n  100%{\\n    left: 0;\\n  }\\n"])));\nvar slide = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .keyframes */ .F4)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\\n  100%{\\n    top: -120px;\\n  }\\n"])));\nvar staticTextStyle =  true ? {\n  name: "1wm4vx9",\n  styles: "color:rgba(0, 0, 0, 0.5);font-size:1.5rem;font-weight:600;position:relative"\n} : 0;\nvar dynamicTextStyle =\n/*#__PURE__*/\n\n/*#__PURE__*/\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .css */ .iv)("line-height:60px;height:60px;overflow:hidden;padding-left:20px;li{list-style:none;color:rgba(255, 227, 115);font-size:1.7rem;font-weight:900;top:0;position:relative;animation:", slide, " 6s steps(2) infinite;}li:after{content:\'\';position:absolute;left:0;height:100%;width:100%;background:rgb(255, 255, 255);border-left:2px solid rgba(255, 227, 115);animation:", typing, " 3s steps(9) infinite;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0); // eslint-disable-next-line react/function-component-definition\n\nvar Home = function Home() {\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("div", {\n    css: wrapperStyle\n  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("div", {\n    css: divStyle\n  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("div", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .css */ .iv)(staticTextStyle, " ", _constants_MediaQuery__WEBPACK_IMPORTED_MODULE_1__.mq[1], "{font-size:3rem;}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, "It\'s"), (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("ul", {\n    css:\n    /*#__PURE__*/\n\n    /*#__PURE__*/\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .css */ .iv)(dynamicTextStyle, " ", _constants_MediaQuery__WEBPACK_IMPORTED_MODULE_1__.mq[1], "{li{font-size:3.2rem;}}" + ( true ? "" : 0),  true ? "" : 0,  true ? "" : 0)\n  }, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("li", null, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("span", null, "Lonnie\'s Portfolio")), (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("li", null, (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__/* .jsx */ .tZ)("span", null, "Development Story")))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///568\n')}}]);